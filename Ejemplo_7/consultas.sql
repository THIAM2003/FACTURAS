--INNER JOIN O JOIN ES LA INTERSECCION

--TOTAL DE FACTURAS POR AÑO
SELECT 
    TO_CHAR(FECHA_CREACION, 'YYYY') AS ANO,
    TO_CHAR(SUM(VALOR_TOTAL), '99G999G999') AS TOTAL_FACTURA
FROM 
    FACTURA
GROUP BY 
    TO_CHAR(FECHA_CREACION, 'YYYY')
ORDER BY 
    TOTAL_FACTURA DESC;

--TOTAL FACTURAS POR MES 
SELECT 
    TO_CHAR(FECHA_CREACION, 'YYYY-MM') AS MES,
    TO_CHAR(SUM(VALOR_TOTAL), '99G999G999') AS TOTAL_FACTURA
FROM 
    FACTURA
GROUP BY 
    TO_CHAR(FECHA_CREACION, 'YYYY-MM')
ORDER BY 
    TOTAL_FACTURA DESC
FETCH FIRST 1 ROWS ONLY;

-- CONSULTA EL VALOR TOTAL DE VENTAS EN AGOSTO
SELECT 
    TO_CHAR(SUM(VALOR_TOTAL), '99G999G999') AS TOTAL_AGOSTO
FROM 
    FACTURA F
WHERE 
    TO_CHAR(F.FECHA_CREACION, 'MM') = '08'
    AND EXISTS (
        SELECT 1
        FROM DETALLE_FACTURA_CLIENTE DFC
        WHERE DFC.FACTURA_ID = F.ID);

-- CONSULTA EL VALOR TOTAL DE VENTAS POR AÑO Y LO ORGANIZA DE MAYOR A MENOR
SELECT 
    TO_CHAR(f.FECHA_CREACION, 'YYYY') AS ANO,
    TO_CHAR(SUM(f.VALOR_TOTAL), '99G999G999') AS TOTAL_ANO
FROM 
    FACTURA f
WHERE 
    EXISTS (
        SELECT 1
        FROM DETALLE_FACTURA_CLIENTE dfc
        WHERE dfc.FACTURA_ID = f.ID
    )
GROUP BY 
    TO_CHAR(f.FECHA_CREACION, 'YYYY')
ORDER BY 
    TOTAL_ANO DESC;

-- CONSULTA EL VALOR TOTAL DE VENTAS POR MES Y LO ORGANIZA DE MAYOR A MENOR, SUMA PARA EL MISMO MES SIN IMPORTAR EL AÑO
SELECT 
    TO_CHAR(f.FECHA_CREACION, 'MM') AS MES,
    TO_CHAR(SUM(f.VALOR_TOTAL), '99G999G999') AS TOTAL_MES
FROM 
    FACTURA f
WHERE 
    EXISTS (
        SELECT 1
        FROM DETALLE_FACTURA_CLIENTE dfc
        WHERE dfc.FACTURA_ID = f.ID
    )
GROUP BY 
    TO_CHAR(f.FECHA_CREACION, 'MM')
ORDER BY 
    TOTAL_MES DESC;

-- CONSULTA EL VALOR TOTAL DE VENTAS POR MES Y LO ORGANIZA DE MAYOR A MENOR PERO CON EL AÑO, ES DECIR, PARA CADA AÑO DA LAS VENTAS POR MES
SELECT 
    TO_CHAR(f.FECHA_CREACION, 'YYYY-MM') AS MES,
    TO_CHAR(SUM(f.VALOR_TOTAL), '99G999G999') AS TOTAL_MES
FROM 
    FACTURA f
WHERE 
    EXISTS (
        SELECT 1
        FROM DETALLE_FACTURA_CLIENTE dfc
        WHERE dfc.FACTURA_ID = f.ID
    )
GROUP BY 
    TO_CHAR(f.FECHA_CREACION, 'YYYY-MM')
ORDER BY 
    TOTAL_MES DESC;

-- CONSULTA EL VALOR TOTAL DE COMPRAS POR AÑO Y LO ORGANIZA DE MAYOR A MENOR
SELECT 
    TO_CHAR(f.FECHA_CREACION, 'YYYY') AS ANO,
    TO_CHAR(SUM(f.VALOR_TOTAL), '99G999G999') AS TOTAL_ANO
FROM 
    FACTURA f
WHERE 
    EXISTS (
        SELECT 1
        FROM DETALLE_FACTURA_INGREDIENTE DFI
        WHERE DFI.FACTURA_ID = f.ID
    )
GROUP BY 
    TO_CHAR(f.FECHA_CREACION, 'YYYY')
ORDER BY 
    TOTAL_ANO DESC;

-- CONSULTA EL VALOR TOTAL DE COMPRAS POR MES Y LO ORGANIZA DE MAYOR A MENOR, SUMA PARA EL MISMO MES SIN IMPORTAR EL AÑO
SELECT 
    TO_CHAR(f.FECHA_CREACION, 'MM') AS MES,
    TO_CHAR(SUM(f.VALOR_TOTAL), '99G999G999') AS TOTAL_MES
FROM 
    FACTURA f
WHERE 
    EXISTS (
        SELECT 1
        FROM DETALLE_FACTURA_INGREDIENTE DFI
        WHERE DFI.FACTURA_ID = f.ID
    )
GROUP BY 
    TO_CHAR(f.FECHA_CREACION, 'MM')
ORDER BY 
    TOTAL_MES DESC;

-- CONSULTA EL VALOR TOTAL DE COMPRAS POR MES Y LO ORGANIZA DE MAYOR A MENOR, SUMA EL MES POR AÑO
SELECT 
    TO_CHAR(f.FECHA_CREACION, 'YYYY-MM') AS MES,
    TO_CHAR(SUM(f.VALOR_TOTAL), '99G999G999') AS TOTAL_MES
FROM 
    FACTURA f
WHERE 
    EXISTS (
        SELECT 1
        FROM DETALLE_FACTURA_INGREDIENTE DFI
        WHERE DFI.FACTURA_ID = f.ID
    )
GROUP BY 
    TO_CHAR(f.FECHA_CREACION, 'YYYY-MM')
ORDER BY 
    TOTAL_MES DESC;

--CONSULTA Y ORGANIZA DE MAYOR A MENOR LA CANTIDAD DE VECES QUE SE VENDIO UN PRODUCTO
--SE USA LEFT JOIN YA QUE SERIA TODOS LOS ELEMENTOS DEL PRIMER CONJUNTO QUE TAMBIEN ESTEN EN EL SEGUNDO
-- DE FORMA QUE EXCLUYE AQUELLOS QUE NO ESTEN EN EL PRIMERO PERO SI EN EL SEGUNDO

CREATE OR REPLACE VIEW MAS_VENDIDO_EN_GENERAL AS
SELECT 
    p.ID AS PRODUCTO_ID,
    p.NOMBRE AS NOMBRE_PRODUCTO,
    COALESCE(SUM(dfc.CANTIDAD_PRODUCTO), 0) AS TOTAL_VENDIDO
FROM 
    PRODUCTO p
LEFT JOIN 
    DETALLE_FACTURA_CLIENTE dfc ON p.ID = dfc.PRODUCTO_ID
GROUP BY 
    p.ID, p.NOMBRE
ORDER BY 
    TOTAL_VENDIDO DESC;

--PRODUCTO MAS VENDIDO POR MES PARA CADA AÑO
CREATE OR REPLACE VIEW PRODUCTO_MAS_VENDIDO_MENSUAL AS
SELECT 
    TO_CHAR(f.FECHA_CREACION, 'YYYY-MM') AS MES_ANO,
    p.ID AS PRODUCTO_ID,
    p.NOMBRE AS NOMBRE_PRODUCTO,
    SUM(dfc.CANTIDAD_PRODUCTO) AS TOTAL_VENDIDO
FROM 
    FACTURA f
JOIN 
    DETALLE_FACTURA_CLIENTE dfc ON f.ID = dfc.FACTURA_ID
JOIN 
    PRODUCTO p ON dfc.PRODUCTO_ID = p.ID
GROUP BY 
    TO_CHAR(f.FECHA_CREACION, 'YYYY-MM'), p.ID, p.NOMBRE
HAVING 
    SUM(dfc.CANTIDAD_PRODUCTO) = (
        SELECT MAX(SUM(dfc_inner.CANTIDAD_PRODUCTO))
        FROM DETALLE_FACTURA_CLIENTE dfc_inner
        JOIN FACTURA f_inner ON dfc_inner.FACTURA_ID = f_inner.ID
        WHERE TO_CHAR(f_inner.FECHA_CREACION, 'YYYY-MM') = TO_CHAR(f.FECHA_CREACION, 'YYYY-MM')
        GROUP BY dfc_inner.PRODUCTO_ID
    )
ORDER BY 
    TOTAL_VENDIDO DESC;

-- TOTAL DE VENTAS Y COMPRAS POR MES PARA CADA AÑO

SELECT 
    TO_CHAR(f.FECHA_CREACION, 'YYYY-MM') AS MES_ANO,
    
    -- Total de ventas por mes (sumando solo facturas con registros en DETALLE_FACTURA_CLIENTE)
    TO_CHAR(COALESCE(
        (SELECT SUM(fv.VALOR_TOTAL)
         FROM FACTURA fv
         WHERE TO_CHAR(fv.FECHA_CREACION, 'YYYY-MM') = TO_CHAR(f.FECHA_CREACION, 'YYYY-MM')
           AND EXISTS (SELECT 1 
                       FROM DETALLE_FACTURA_CLIENTE dfc
                       WHERE dfc.FACTURA_ID = fv.ID)
        ), 0), '99G999G999') AS TOTAL_VENTAS,

    -- Total de compras por mes (sumando solo facturas con registros en DETALLE_FACTURA_INGREDIENTE)
    TO_CHAR(COALESCE(
        (SELECT SUM(fc.VALOR_TOTAL)
         FROM FACTURA fc
         WHERE TO_CHAR(fc.FECHA_CREACION, 'YYYY-MM') = TO_CHAR(f.FECHA_CREACION, 'YYYY-MM')
           AND EXISTS (SELECT 1 
                       FROM DETALLE_FACTURA_INGREDIENTE dfi
                       WHERE dfi.FACTURA_ID = fc.ID)
        ), 0), '99G999G999') AS TOTAL_COMPRAS
FROM 
    FACTURA f
GROUP BY 
    TO_CHAR(f.FECHA_CREACION, 'YYYY-MM')
ORDER BY 
    MES_ANO;

--TOTAL DE VENTAS, COMPRAS, SU SUMA POR MES PARA CADA AÑO Y SU RESTA QUE SERIA LA UTILIDAD

CREATE OR REPLACE VIEW UTILIDAD_MENSUAL AS
WITH Ventas AS (
    SELECT 
        TO_CHAR(f.FECHA_CREACION, 'YYYY-MM') AS MES_ANO,
        SUM(f.VALOR_TOTAL) AS TOTAL_VENTAS
    FROM 
        FACTURA f
    WHERE 
        EXISTS (SELECT 1 FROM DETALLE_FACTURA_CLIENTE dfc WHERE dfc.FACTURA_ID = f.ID)
    GROUP BY 
        TO_CHAR(f.FECHA_CREACION, 'YYYY-MM')
),
Compras AS (
    SELECT 
        TO_CHAR(f.FECHA_CREACION, 'YYYY-MM') AS MES_ANO,
        SUM(f.VALOR_TOTAL) AS TOTAL_COMPRAS
    FROM 
        FACTURA f
    WHERE 
        EXISTS (SELECT 1 FROM DETALLE_FACTURA_INGREDIENTE dfi WHERE dfi.FACTURA_ID = f.ID)
    GROUP BY 
        TO_CHAR(f.FECHA_CREACION, 'YYYY-MM')
)
SELECT 
    COALESCE(Ventas.MES_ANO, Compras.MES_ANO) AS MES_ANO,
    TO_CHAR(NVL(Ventas.TOTAL_VENTAS, 0), '99G999G999') AS TOTAL_VENTAS,
    TO_CHAR(NVL(Compras.TOTAL_COMPRAS, 0), '99G999G999') AS TOTAL_COMPRAS,
    TO_CHAR(NVL(Ventas.TOTAL_VENTAS, 0) + NVL(Compras.TOTAL_COMPRAS, 0), '99G999G999') AS TOTAL_MENSUAL,
    TO_CHAR(NVL(Ventas.TOTAL_VENTAS, 0) - NVL(Compras.TOTAL_COMPRAS, 0), '99G999G999') AS UTILIDAD_MENSUAL
FROM 
    Ventas
FULL OUTER JOIN 
    Compras ON Ventas.MES_ANO = Compras.MES_ANO
ORDER BY 
    MES_ANO;

--GANANCIA POR PRODUCTO, EN ESTE CASO ES TRIVIAL YA QUE EL PRECIO DE VENTA ES EL DOBLE QUE PRODUCCION

CREATE OR REPLACE VIEW GANANCIA_PRODUCTO AS
SELECT 
    p.ID AS PRODUCTO_ID,
    p.NOMBRE,
    p.PRECIO_UNITARIO,
    COALESCE(SUM(pi.PRECIO_PRODUCCION), 0) AS COSTO_TOTAL_PRODUCCION,
    (p.PRECIO_UNITARIO - COALESCE(SUM(pi.PRECIO_PRODUCCION), 0)) AS GANANCIA
FROM 
    PRODUCTO p
LEFT JOIN 
    PRODUCTO_INGREDIENTE pi ON p.ID = pi.PRODUCTO_ID
GROUP BY 
    p.ID, p.NOMBRE, p.PRECIO_UNITARIO
ORDER BY 
    GANANCIA DESC;

-- CUANTOS INGREDIENTES SE LE COMPRAN A CADA PROVEEDOR ORGANIZADOS DE MAYOR A MENOR
SELECT 
    prov.ID AS PROVEEDOR_ID,
    prov.NOMBRE AS PROVEEDOR_NOMBRE,
    COALESCE(SUM(dfi.CANTIDAD_INGREDIENTE), 0) AS TOTAL_INGREDIENTES_COMPRADOS
FROM 
    PROVEEDOR prov
LEFT JOIN 
    INGREDIENTE ing ON prov.ID = ing.PROVEEDOR_ID
LEFT JOIN 
    DETALLE_FACTURA_INGREDIENTE dfi ON ing.ID = dfi.INGREDIENTE_ID
GROUP BY 
    prov.ID, prov.NOMBRE
ORDER BY 
    TOTAL_INGREDIENTES_COMPRADOS DESC;